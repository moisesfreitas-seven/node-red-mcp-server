[
    {
        "id": "inject1",
        "type": "inject",
        "name": "Teste Hello World",
        "props": [
            {
                "p": "payload",
                "v": "show hello world message",
                "vt": "str"
            },
            {
                "p": "apiKey",
                "v": "sk-sua-chave-openai-aqui",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 100,
        "wires": [["mcp1"]]
    },
    {
        "id": "inject2",
        "type": "inject",
        "name": "Teste Users API",
        "props": [
            {
                "p": "payload",
                "v": "exiba informações do usuário",
                "vt": "str"
            },
            {
                "p": "apiKey",
                "v": "sk-sua-chave-openai-aqui",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 160,
        "wires": [["mcp1"]]
    },
    {
        "id": "inject3",
        "type": "inject",
        "name": "Teste Servidor Customizado",
        "props": [
            {
                "p": "payload",
                "v": "execute custom tool",
                "vt": "str"
            },
            {
                "p": "apiKey",
                "v": "sk-sua-chave-openai-aqui",
                "vt": "str"
            },
            {
                "p": "mcpServerCommand",
                "v": "python",
                "vt": "str"
            },
            {
                "p": "mcpServerArgs",
                "v": "meu_servidor_customizado.py",
                "vt": "str"
            },
            {
                "p": "sessionId",
                "v": "sessao_customizada",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 220,
        "wires": [["mcp1"]]
    },
    {
        "id": "mcp1",
        "type": "mcp-tools",
        "name": "MCP Server",
        "serverUrl": "http://localhost:3000",
        "apiKey": "",
        "mcpServerCommand": "node",
        "mcpServerArgs": "../mcp-server/build/index.js",
        "sessionId": "default",
        "timeout": 30000,
        "x": 380,
        "y": 160,
        "wires": [["debug1", "debug2", "function1"]]
    },
    {
        "id": "debug1",
        "type": "debug",
        "name": "Resposta",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 580,
        "y": 120,
        "wires": []
    },
    {
        "id": "debug2",
        "type": "debug",
        "name": "Detalhes MCP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "mcpResult",
        "targetType": "msg",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "function1",
        "type": "function",
        "name": "Processar Resultado",
        "func": "// Exemplo de processamento do resultado MCP\nif (msg.mcpResult && msg.mcpResult.success) {\n    msg.processedResult = {\n        originalPrompt: msg.mcpResult.originalPrompt,\n        response: msg.mcpResult.response,\n        toolsCount: msg.mcpResult.toolsUsed.length,\n        serverUsed: msg.mcpResult.serverCommand + ' ' + msg.mcpResult.serverArgs.join(' '),\n        sessionId: msg.mcpResult.sessionId,\n        timestamp: new Date().toISOString()\n    };\n    \n    node.status({fill:\"green\",shape:\"dot\",text:`Sucesso: ${msg.mcpResult.toolsUsed.length} tools`});\n} else {\n    msg.processedResult = {\n        error: msg.mcpResult ? msg.mcpResult.error : 'Erro desconhecido',\n        timestamp: new Date().toISOString()\n    };\n    \n    node.status({fill:\"red\",shape:\"ring\",text:\"Erro\"});\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 200,
        "wires": [["debug3"]]
    },
    {
        "id": "debug3",
        "type": "debug",
        "name": "Resultado Processado",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "processedResult",
        "targetType": "msg",
        "x": 830,
        "y": 200,
        "wires": []
    }
]

